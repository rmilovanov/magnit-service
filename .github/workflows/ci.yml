name: CI

on: [push]

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Python 3.10.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.10.8

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.2.2
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: ~/venv
          installer-parallel: true

      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.venv
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}


      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Code Format control with black
        run: poetry run black service tests --check --diff

      - name: Code quality control with flake8
        run: poetry run flake8 service tests --max-line-length 120

      - name: Service code quality control with pylint
        run: poetry run pylint service --disable=C0111 --max-line-length=120 --extension-pkg-whitelist='pydantic'

      - name: Tests code quality control with pylint
        run: poetry run pylint tests --disable=C0111,C0415,R0903 --max-line-length=120

      - name: Test with pytest
        run: poetry run pytest --cov .