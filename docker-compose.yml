version: '3.8'
services:
  server:
    container_name: service
    build:
      context: .
      dockerfile: service/Dockerfile
    volumes:
    - ./service:/usr/src/service
    ports:
      - "8008:8008"
    command: uvicorn service.main:app --host 0.0.0.0 --port 8008 --reload
    environment:
      - PORT=8008
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    networks:
      example-network:
        ipv4_address: 172.16.238.10

  worker:
    build:
      context: .
      dockerfile: service/Dockerfile
    command: celery -A service.worker.celery worker --loglevel=info --logfile=logs/celery.log
    volumes:
      - ./service:/usr/src/service
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - server
      - redis
    networks:
      example-network:
        ipv4_address: 172.16.238.11

  redis:
    image: redis:6-alpine
    networks:
      example-network:
        ipv4_address: 172.16.238.12

  dashboard:
    build:
      context: .
      dockerfile: service/Dockerfile
    command: celery flower -A worker --broker=redis://localhost:6379/0
    ports:
      - "5556:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - server
      - redis
      - worker
    networks:
      example-network:
        ipv4_address: 172.16.238.13

  tests:
    profiles: ["tests"]
    build:
      context: .
      dockerfile: service/Dockerfile
    volumes:
      - .:/usr/src
    command: poetry run pytest -vv --cov .
    networks:
      example-network:
        ipv4_address: 172.16.238.14

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      example-network:
        ipv4_address: 172.16.238.15

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - ./observability/datasource.yml:/etc/grafana/provisioning/datasource.yml
    env_file:
      - ./observability/config.monitoring
    networks:
      example-network:
        ipv4_address: 172.16.238.16

networks:
  example-network:
    name: example-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24